{"title":"ES242. Data Structures and Algorithms I. Week 02 Lab","markdown":{"yaml":{"css":"/css/teaching.css","toc":false,"sidebar":false,"title":"ES242. Data Structures and Algorithms I. Week 02 Lab","code-copy":true},"headingText":"ES242. Data Structures and Algorithms I.","containsRefs":false,"markdown":"\n\n:::{.column-body-outset}\n\n\n##### Lab 02 \n\n\n\n:::{.callout-note collapse=\"true\" icon=\"false\"}\n\n# Problem 1. Four Points\n\nThere is a rectangle in the xy-plane. Each edge of this rectangle is parallel to the 2or y-axis, and its area is not zero.\n\nGiven the coordinates of three of the four vertices of this rectangle, (P,Q), (A,B), and (X,Y), find the coordinates of the other vertex.\n\n### Constraints\n\nAll numbers are between -100 and +100.\n\nThere uniquely exists a rectangle with all of (P,Q), (A,B), and (X,Y) as vertices, edges parallel to the xor y-axis, and a non-zero area.\n\nAll values in input are integers.\n\n### Input\nInput is given from Standard Input in the following format:\n\n```\nP Q\nA B\nX Y\n```\n \n### Output\n\nPrint the sought coordinates (x,y) separated by a space in the following format:\n\n```\nR S\n```\n\n### Sample I/O\n\n`Sample Input 1`\n\n```default\n-1 -1\n-1 2\n3 2\n```\n\n`Sample Output 1`\n\n```default\n3 -1\n```\n\nThe other vertex of the rectangle with vertices (−1,−1),(−1,2),(3,2) is (3,−1).\n:::\n\n\n:::{.callout-note collapse=\"true\" icon=\"false\"}\n\n# Problem 2. Waking Up\n\n### Problem Statement\n\nOne day, Tina got up at exactly **B** minutes past **A** o'clock (in 24-hour clock), and Rahul got up at exactly **D** minutes and 1 second past **C** o'clock.\n\nIf Tina got up earlier than Rahul, print Tina; otherwise, print Rahul.\n\n### Constraints\n\n- 0 < A < 23\n- 0 ≤ B ≤ 59\n- 0< C < 23\n- 0 ≤ D ≤ 59\n- All values in input are integers.\n\n### Input\n\nInput is given from Standard Input in the following format:\n\n```\nA B C D\n```\n\n### Output\n\nIf Tina got up earlier than Rahul, print Tina; otherwise, print Rahul.\n\n### Sample I/O\n\n`Sample Input 1`\n\n```default\n7 0 6 30\n```\n\n`Sample Output 1`\n\n```default\nRahul\n```\n\n`Sample Input 2`\n\n```default\n7 30 7 30\n```\n\n`Sample Output 2`\n\n```default\nTina\n```\n\n:::\n\n\n:::{.callout-note collapse=\"true\" icon=\"false\"}\n\n# Problem 3. Ratings\n\nCodeforces separates its users into 4 divisions by their rating:\n\n- For Division 1: 1900 ≤ rating\n- For Division 2: 1600 ≤ rating ≤ 1899\n- For Division 3: 1400 ≤ rating ≤ 1599\n- For Division 4: rating ≤ 1399\n\nGiven a rating, print in which division the rating belongs.\n\n### Input\n\nThe first line of the input contains an integer 𝑡 (1≤𝑡≤10^4) — the number of testcases.\n\nThe description of each test consists of one line containing one integer rating (−5000≤rating≤5000).\n\n### Output\n\nFor each test case, output a single line containing the correct division in the format \"Division X\", where 𝑋 is an integer between 1 and 4 representing the division for the corresponding rating.\n\n### Sample I/O\n\n`Sample Input 1`\n\n```default\n7\n-789\n1299\n1300\n1399\n1400\n1679\n2300\n```\n\n`Sample Output 1`\n\n```default\nDivision 4\nDivision 4\nDivision 4\nDivision 4\nDivision 3\nDivision 2\nDivision 1\n```\n\nNote\n\nFor test cases 1−4, the corresponding ratings are −789, 1299, 1300, 1399, so all of them are in division 4.\n\nFor the fifth test case, the corresponding rating is 1400, so it is in division 3.\n\nFor the sixth test case, the corresponding rating is 1679, so it is in division 2.\n\nFor the seventh test case, the corresponding rating is 2300, so it is in division 1.\n\n:::\n\n:::{.callout-note collapse=\"true\" icon=\"false\"}\n\n# Problem 4. Meta Tic-Tac-Toe [Open Ended]\n\n:::{.callout-caution icon=\"false\"}\n# Note\nThis is an optional and open-ended problem. Feel free to get creative.\n:::\n\nExamine the rules of [Ultimate Tic Tac Toe](https://en.wikipedia.org/wiki/Ultimate_tic-tac-toe) and write your own implementation of the game.\n\n:::\n\n\n:::"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../../css/styles.css","/css/teaching.css"],"toc":false,"html-math-method":"katex","include-after-body":["../../../../footer.html"],"filters":["abstract-section"],"output-file":"lab-w02.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.262","theme":["simplex","../../../../custom.scss"],"js":"../../../../scripts.js","smooth-scroll":true,"anchor-sections":true,"page-layout":"full","sidebar":false,"title":"ES242. Data Structures and Algorithms I. Week 02 Lab","code-copy":true},"extensions":{"book":{"multiFile":true}}}}}