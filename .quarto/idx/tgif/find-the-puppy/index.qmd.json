{"title":"Find The Puppy","markdown":{"yaml":{"title":"Find The Puppy","date":"2021-03-14","categories":["logic","game"],"fields":["date","title"],"css":"/css/tgif.css","toc":true},"headingText":"Spoilers: based on our discussion in the second TGIF meetup.","containsRefs":false,"markdown":"\n\n:::{.callout-tip appearance=\"simple\" icon=false}\nContributed by [Debanuj Nayak](https://debanujnayak.github.io).\n:::\n\nThere are 5 boxes with lids kept in a row.\n\n```\n[] [] [] [] []\n```\n\nLet's call them B[1...5].\n\nThere is a puppy P inside one of these boxes.\n\nOur goal is to find the puppy.\n\n```\n[?] [?] [?] [?] [?]\n```\n\nEvery morning you get a chance to open any one of the boxes. If you find the puppy: great, congrats!\n\nIf you don't, tough luck, you have to wait again for the next day. Meanwhile, during the night, the Puppy will move to one of the neighbouring boxes.(can't stay in same box).\nEg:\n\n```\n[] [P] [] [] [] -> [P] [] [] [] [] or [] [] [P] [] [].\n```\n\n1. Does there exist protocols (ways of opening boxes) in which I can guarantee that I can catch the puppy in a finite time?\n2.  If yes, what is the smallest number of days I have to wait to catch the puppy (Which is the best protocol?)\n3. How does this protocol work?\n\n:::{.callout-tip collapse=\"true\" appearance=\"simple\" icon=\"false\"}\n\nHere’s a strategy that uses seven days (h/t: Harshil).\n\nMorning 1:\nOpen Box 2.\nIf it contains P, we are done.\nOtherwise, P is in one of Box 1,3,4 or 5.\n\nMorning 2:\nOpen Box 2.\nIf it contains P, we are done.\nOtherwise, P is in one of Box 3,4 or 5.\n\nMorning 3:\nOpen Box 3.\nIf it contains P, we are done.\nOtherwise, P is in one of Box 2,4 or 5.\n\nMorning 4:\nOpen Box 4.\nIf it contains P, we are done.\nOtherwise, P is in one of Box 1,3 or 5.\n\nMorning 5:\nOpen Box 4.\nIf it contains P, we are done.\nOtherwise, P is in Box 2.\n\nMorning 6:\nOpen Box 3.\nIf it contains P, we are done.\nOtherwise, P is in Box 1.\n\nMorning 7:\nOpen Box 2.\nIt definitely contains P.\n\n---\n\nHere’s a strategy that uses six days (h/t: Debanuj):\n\nFirst Observation:\nThe puppy P alternates between odd and even boxes\n\nSecond Observation:\nThe puppy P only has one possible choice to go to, if it is in Box 1 or Box n\n\nLet us assume that P is in an even box i.e. B[2] or B[4] on the first morning.\n\nMorning 1:\nCheck B[2], if you find P, done. Otherwise, according to the assumption, P is in B[4]\n\nNight 1:\nP moves to B[3] or B[5]\n\nMorning 2:\nCheck B[3], if you find P, done. Otherwise P is in B[5] according to initial assumption.\n\nNight 2:\nP moves to B[4], no other choice.\n\nMorning 3:\nCheck B[4]. If assumption was true, then P must be in B[4]. If you find P, done. If you don't find P, that means initial assumption was false.\n\nThus on morning 1, P was in an odd box ⇒ on morning3 (today), P is again in an odd box. Which means tomorrow (morning 4), P must be in an even box.\n\nNight 3:\nP moves to B[2] or B[4]\n\nMorning 4:\nNow our assumption holds true that P is in an even box, and now you can repeat the procedure we followed on mornings 1,2,3 again on mornings 4,5,6 and we are guaranteed to catch P.\n\n:::\n\n\n\nUnresolved questions:\n\n1. Can we do this in five days? Or can we show that it’s impossible to come up with a protocol that uses only five days?\n\n2. What about six boxes? Or seven? Or n?\n\n3. If the moves are equiprobable and the initial choice is uniformly random, what is the expected number of moves executed by either of the strategies above?\n\n4. How much faster can we do this if we are allowed to open two boxes at once?\n\n5. Question from Bireswar: If the puppy is allowed to stay put, then there’s no protocol to find the puppy even in the trivial setting with two boxes. What if we are allowed to open more than one box? How many more boxes do we need to be able to open per day to catch a potentially non-moving puppy amongst five boxes?\n","srcMarkdownNoYaml":"\n\n:::{.callout-tip appearance=\"simple\" icon=false}\nContributed by [Debanuj Nayak](https://debanujnayak.github.io).\n:::\n\nThere are 5 boxes with lids kept in a row.\n\n```\n[] [] [] [] []\n```\n\nLet's call them B[1...5].\n\nThere is a puppy P inside one of these boxes.\n\nOur goal is to find the puppy.\n\n```\n[?] [?] [?] [?] [?]\n```\n\nEvery morning you get a chance to open any one of the boxes. If you find the puppy: great, congrats!\n\nIf you don't, tough luck, you have to wait again for the next day. Meanwhile, during the night, the Puppy will move to one of the neighbouring boxes.(can't stay in same box).\nEg:\n\n```\n[] [P] [] [] [] -> [P] [] [] [] [] or [] [] [P] [] [].\n```\n\n1. Does there exist protocols (ways of opening boxes) in which I can guarantee that I can catch the puppy in a finite time?\n2.  If yes, what is the smallest number of days I have to wait to catch the puppy (Which is the best protocol?)\n3. How does this protocol work?\n\n:::{.callout-tip collapse=\"true\" appearance=\"simple\" icon=\"false\"}\n## Spoilers: based on our discussion in the second TGIF meetup.\n\nHere’s a strategy that uses seven days (h/t: Harshil).\n\nMorning 1:\nOpen Box 2.\nIf it contains P, we are done.\nOtherwise, P is in one of Box 1,3,4 or 5.\n\nMorning 2:\nOpen Box 2.\nIf it contains P, we are done.\nOtherwise, P is in one of Box 3,4 or 5.\n\nMorning 3:\nOpen Box 3.\nIf it contains P, we are done.\nOtherwise, P is in one of Box 2,4 or 5.\n\nMorning 4:\nOpen Box 4.\nIf it contains P, we are done.\nOtherwise, P is in one of Box 1,3 or 5.\n\nMorning 5:\nOpen Box 4.\nIf it contains P, we are done.\nOtherwise, P is in Box 2.\n\nMorning 6:\nOpen Box 3.\nIf it contains P, we are done.\nOtherwise, P is in Box 1.\n\nMorning 7:\nOpen Box 2.\nIt definitely contains P.\n\n---\n\nHere’s a strategy that uses six days (h/t: Debanuj):\n\nFirst Observation:\nThe puppy P alternates between odd and even boxes\n\nSecond Observation:\nThe puppy P only has one possible choice to go to, if it is in Box 1 or Box n\n\nLet us assume that P is in an even box i.e. B[2] or B[4] on the first morning.\n\nMorning 1:\nCheck B[2], if you find P, done. Otherwise, according to the assumption, P is in B[4]\n\nNight 1:\nP moves to B[3] or B[5]\n\nMorning 2:\nCheck B[3], if you find P, done. Otherwise P is in B[5] according to initial assumption.\n\nNight 2:\nP moves to B[4], no other choice.\n\nMorning 3:\nCheck B[4]. If assumption was true, then P must be in B[4]. If you find P, done. If you don't find P, that means initial assumption was false.\n\nThus on morning 1, P was in an odd box ⇒ on morning3 (today), P is again in an odd box. Which means tomorrow (morning 4), P must be in an even box.\n\nNight 3:\nP moves to B[2] or B[4]\n\nMorning 4:\nNow our assumption holds true that P is in an even box, and now you can repeat the procedure we followed on mornings 1,2,3 again on mornings 4,5,6 and we are guaranteed to catch P.\n\n:::\n\n\n\nUnresolved questions:\n\n1. Can we do this in five days? Or can we show that it’s impossible to come up with a protocol that uses only five days?\n\n2. What about six boxes? Or seven? Or n?\n\n3. If the moves are equiprobable and the initial choice is uniformly random, what is the expected number of moves executed by either of the strategies above?\n\n4. How much faster can we do this if we are allowed to open two boxes at once?\n\n5. Question from Bireswar: If the puppy is allowed to stay put, then there’s no protocol to find the puppy even in the trivial setting with two boxes. What if we are allowed to open more than one box? How many more boxes do we need to be able to open per day to catch a potentially non-moving puppy amongst five boxes?\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../css/styles.css","/css/tgif.css"],"toc":true,"html-math-method":"katex","include-after-body":["../../footer.html"],"filters":["abstract-section"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":["simplex","../../custom.scss"],"js":"../../scripts.js","smooth-scroll":true,"anchor-sections":true,"page-layout":"full","title":"Find The Puppy","date":"2021-03-14","categories":["logic","game"],"fields":["date","title"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}